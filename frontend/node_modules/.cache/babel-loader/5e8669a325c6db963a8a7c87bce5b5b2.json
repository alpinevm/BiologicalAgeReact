{"ast":null,"code":"import _slicedToArray from\"/Users/alpinevm/Development/BiologicalAgeReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{QUESTIONS}from'./questions';import UserForm from'./user';export default function App(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentQuestion=_useState2[0],setCurrentQuestion=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showEndScreen=_useState4[0],setEndScreen=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showQuestions=_useState6[0],setShowQuestions=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),ageDelta=_useState8[0],setAgeDelta=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),user=_useState10[0],setUser=_useState10[1];useEffect(function(){console.log(user);},[user]);var handleAnswerOptionClick=function handleAnswerOptionClick(questionAgeDelta){setAgeDelta(ageDelta+questionAgeDelta);var nextQuestion=currentQuestion+1;if(nextQuestion<QUESTIONS.length){setCurrentQuestion(nextQuestion);}else{setEndScreen(true);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},!showQuestions?/*#__PURE__*/React.createElement(UserForm,{setUser:setUser,setShowQuestions:setShowQuestions}):showEndScreen?/*#__PURE__*/React.createElement(\"div\",{className:\"score-section\"},\"Your biological age is \",Number.parseInt(user.age)+ageDelta):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"question-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"question-count\"},/*#__PURE__*/React.createElement(\"span\",null,\"Question \",currentQuestion+1,\"/\",QUESTIONS.length)),/*#__PURE__*/React.createElement(\"div\",{className:\"question-text\"},QUESTIONS[currentQuestion].questionText)),/*#__PURE__*/React.createElement(\"div\",{className:\"answer-section\"},QUESTIONS[currentQuestion].answerOptions.map(function(answerOption){return/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return handleAnswerOptionClick(answerOption.ageDelta);}},answerOption.answerText);}))));}","map":{"version":3,"sources":["/Users/alpinevm/Development/BiologicalAgeReact/src/App.js"],"names":["React","useState","useEffect","QUESTIONS","UserForm","App","currentQuestion","setCurrentQuestion","showEndScreen","setEndScreen","showQuestions","setShowQuestions","ageDelta","setAgeDelta","user","setUser","console","log","handleAnswerOptionClick","questionAgeDelta","nextQuestion","length","Number","parseInt","age","questionText","answerOptions","map","answerOption","answerText"],"mappings":"qKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,QAArB,CAEA,cAAe,SAASC,CAAAA,GAAT,EAAe,eACiBJ,QAAQ,CAAC,CAAD,CADzB,wCACtBK,eADsB,eACLC,kBADK,8BAESN,QAAQ,CAAC,KAAD,CAFjB,yCAEtBO,aAFsB,eAEPC,YAFO,8BAGaR,QAAQ,CAAC,KAAD,CAHrB,yCAGtBS,aAHsB,eAGPC,gBAHO,8BAIGV,QAAQ,CAAC,CAAD,CAJX,yCAItBW,QAJsB,eAIZC,WAJY,8BAKLZ,QAAQ,CAAC,EAAD,CALH,0CAKtBa,IALsB,gBAKhBC,OALgB,gBAO7Bb,SAAS,CAAC,UAAM,CACfc,OAAO,CAACC,GAAR,CAAYH,IAAZ,EACA,CAFQ,CAEN,CAACA,IAAD,CAFM,CAAT,CAIA,GAAMI,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,gBAAD,CAAsB,CACrDN,WAAW,CAACD,QAAQ,CAAGO,gBAAZ,CAAX,CAEA,GAAMC,CAAAA,YAAY,CAAGd,eAAe,CAAG,CAAvC,CACA,GAAIc,YAAY,CAAGjB,SAAS,CAACkB,MAA7B,CAAqC,CACpCd,kBAAkB,CAACa,YAAD,CAAlB,CACA,CAFD,IAEO,CACNX,YAAY,CAAC,IAAD,CAAZ,CACA,CACD,CATD,CAWA,mBACC,2BAAK,SAAS,CAAC,KAAf,EACE,CAACC,aAAD,cAAmB,oBAAC,QAAD,EAAU,OAAO,CAAEK,OAAnB,CAA4B,gBAAgB,CAAEJ,gBAA9C,EAAnB,CAEDH,aAAa,cACZ,2BAAK,SAAS,CAAC,eAAf,4BACyBc,MAAM,CAACC,QAAP,CAAgBT,IAAI,CAACU,GAArB,EAA4BZ,QADrD,CADY,cAKZ,qDACC,2BAAK,SAAS,CAAC,kBAAf,eACC,2BAAK,SAAS,CAAC,gBAAf,eACC,4CAAgBN,eAAe,CAAG,CAAlC,KAAsCH,SAAS,CAACkB,MAAhD,CADD,CADD,cAIC,2BAAK,SAAS,CAAC,eAAf,EAAgClB,SAAS,CAACG,eAAD,CAAT,CAA2BmB,YAA3D,CAJD,CADD,cAOC,2BAAK,SAAS,CAAC,gBAAf,EACEtB,SAAS,CAACG,eAAD,CAAT,CAA2BoB,aAA3B,CAAyCC,GAAzC,CAA6C,SAACC,YAAD,qBAC7C,8BAAQ,OAAO,CAAE,yBAAMV,CAAAA,uBAAuB,CAACU,YAAY,CAAChB,QAAd,CAA7B,EAAjB,EAAwEgB,YAAY,CAACC,UAArF,CAD6C,EAA7C,CADF,CAPD,CARF,CADD,CA0BA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { QUESTIONS } from './questions';\nimport UserForm from './user';\n\nexport default function App() {\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showEndScreen, setEndScreen] = useState(false);\n\tconst [showQuestions, setShowQuestions] = useState(false);\n\tconst [ageDelta, setAgeDelta] = useState(0);\n\tconst [user, setUser] = useState({});\n\n\tuseEffect(() => {\n\t\tconsole.log(user);\n\t}, [user]);\n\n\tconst handleAnswerOptionClick = (questionAgeDelta) => {\n\t\tsetAgeDelta(ageDelta + questionAgeDelta);\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < QUESTIONS.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetEndScreen(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='app' >\n\t\t\t{!showQuestions ? ( <UserForm setUser={setUser} setShowQuestions={setShowQuestions}/> ) : (\n\t\t\t\n\t\t\tshowEndScreen ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYour biological age is {Number.parseInt(user.age) + ageDelta}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}/{QUESTIONS.length}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{QUESTIONS[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{QUESTIONS[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.ageDelta)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)\n\t\t\t)}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}